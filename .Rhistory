install.packages(c("leaps", "locfit", "MASS", "mgcv", "tseries", "uroot", "TSA", "package"))
setwd("~/Data")
install.packages("swirl")
Deprecared
Deprecated
a <- available.packages()
head(rownamed(a),3)
head(rownames(a),3)
install.packages("slidify")
find.package("devtools")
install.packages("Kernsmooth")
install.packages("KernSmooth")
library(KernSmooth)
install.packages('RMySQL',type='source')
install.packages("RMySQL")
library('RMySQL')
$ echo "R.home()" | Rscript  /dev/stdin
echo "R.home()" | Rscript  /dev/stdin
install.packages('Xcode')
library('RMySQL')
install.packages('RMySQL',type='source')
R CMD INSTALL --configure-args="--with-mysql-dir=/usr/local/mysql-5.7.4-m14-osx10.7-x86_64/ --with-mysql-inc=/usr/local/mysql-5.7.4-m14-osx10.7-x86_64/include/ --with-mysql-lib=/usr/local/mysql-5.7.4-m14-osx10.7-x86_64/lib/”
Library(RMySQL)
install.packages(RMySQL)
install.packages("RMySQL")
install.packages("RMySQL")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
created = h5createFile("example.h5")
library(rhdf5)
created = h5createFile("example.h5")
x<-4
class(x)
x <- c(4, "a", TRUE)
class(x)
x <- c(1,3, 5) and y <- c(3, 2, 10)
x <- c(1,3, 5) y <- c(3, 2, 10)
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind(x, y)
x <- list(2, "a", "b", TRUE)
x[[2]]
x[2]
x <- 1:4
y <- 2
x + y
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x>=10] <-4
x
x <- c(1,2,NA,4,NA,5)
bad <- is.na(x)
x[!bad]
x[<>!bad]
bad
x[x=NA] <- 0
x
x[x="NA"] <- 0
x
x <- c(1,2,NA,4,NA,5)
y <- c("a","b",NA,"d",NA,"F")
good <- complete.cases(x,y)
good
x[good]
y[good]
setwd("~/Data/datasciencecoursera")
read.csv("hw1_data.csv")
data <-read.csv("hw1_data.csv")
data[2]
data[,2]
data$Ozone
data[[2]]
data[[0,2]]
head(data)
count.rows(data)
countrows(data)
nrows(data)
args(head)
head(data,152,153)
head(data,153)
head(data,2)
tail(data,3)
data$Ozone[47]
OMiss <- is.na(data$Ozone)
length(Omiss)
length(OMiss)
OMiss <- is.na(data$Ozone)
x[!bad]
OMiss[!bad]
lenth(OMiss[!bad])
length(OMiss[!bad])
OMiss <- is.true(data$Ozone)
length(OMiss[!bad])
length(OMiss[bad])
OMiss <- is.na(data$Ozone)
length(OMiss)
OMiss[bad]
OMiss <- is.na(data$Ozone)
Ozone <-data$Ozone
length(Ozone)
bad <-is.na(Ozone)
Ozone[bad]
length(Ozone[bad])
GoodOzone <- Ozone[!bad]
length(GoodOzone)
116+37
mean(GoodOzone)
data[1:6,0]
data[1:6,]
good <- complete.cases(data)
data[good, ][1:6,]
data[good, ][1:10,]
data[good, ][data$Ozone>31,][data$Temp>90]
data[good, ][data$Ozone>31,]
data[data$Ozone>31,]
OzoneFilt <- data[data$Ozone>31,]
OzoneFilt
Complete.cases(OzoneFilt)
complete.cases(OzoneFilt)
Filtered <- data[data$Ozone > 31]
Filtered <- data[data$Ozone > 31,]
Filtered2 <- Filtered[Filtered$Temp > 90,]
head(Filtered2, 1:6)
head(Filtered2, n=4)
head(Filtered2, n=20)
Filtered2
BadFiltered2 <- is.na(Filtered2)
Filtered2[!bad]
Filtered2[!bad,0]
Filtered2[!bad,]
BadFiltered2 <- is.na(Filtered2$Ozone)
Filtered2[!bad,]
Filtered2$Ozone[!bad,]
Filtered2$Ozone[!bad]
good <- complete.cases(Filtered2$Ozone,)
data <-read.csv("hw1_data.csv")
good <- complete.cases(airquality)
cleandata <- data[good, ][,]
head(cleandata, 1:10)
head(cleandata, n=20)
View(cleandata)
cleandata[cleandata$Ozone>31 & cleandata$Temp>90,]
cleandatafilter <- cleandata[cleandata$Ozone>31 & cleandata$Temp>90,]
View(cleandatafilter)
mean(cleandatafilter$Solar.R)
cleanmonthfilter = cleandata[cleandata$month = 6,]
cleanmonthfilter = cleandata[cleandata$Month = 6,]
cleanmonthfilter = cleandata[cleandata$Month == 6,]
View(cleanmonthfilter)
mean(cleanmonthfilter$Temp)
udm = data[data$Month == 6,]
View(udm)
mean(udm$Temp)
View(data)
udm2 = data[data$Month == 5,]
View(udm2)
udm2 = cleandata[cleandata$Month == 5,]
View(udm2)
max(udm2$Ozone)
x[x > 10] == 4
mean(cleandata$Ozone)
for(i in 1:10) { x< i+1
}
x
x <- 1
for(i in 1:10) { x< i+1}
x
x <- c("a","b","c","d")
for (i in 1:4) {
print(x[i])
}
cube <- function(x,n) { x^3}
cube(3)
x <- 1:10
if(x>5) { x<-0}
if(x[1:10]>5) { x<-0}
for(i to len(x)) { if(x[i]>5) { x[i] <- 0}
for(i to len(x)) { if(x[i]>5) {x[i] <- 0}}
for(i to seq_along(x)) { if(x[i]>5) {x[i] <- 0}}
for(i in seq_along(x)) { if(x[i]>5) {x[i] <- 0}}
x
x <- 1:10
for(i in seq_along(x)) { if(x[i]>5) {x[i] <- 0}}
x
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <-5
y <- if(x < 3) {
NA
} else {
10
}
y
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
add2 <- function(x,y) {
x + y
}
add(3,8)
add2(3,8)
above <- function(x,y) {
use <- x > y
x[use]
}
x <- 1:20
above(x,12)
above <- function(x,y = 10) {
use <- x > y
x[use]
}
x <- 1:20
above(x)
}
above <- function(x,y = 10) {
}
colmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i])
}
means
}
columnmean(airqulaity)
columnmean(airquality)
colmean(airquality)
colmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i])
}
means
}
colmean(airquality)
colmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i])
}
means
}
colmean(airquality)
colsmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i])
}
means
}
colsmean(airquality)
colsmean(airquality, TRUE)
search
search()
install.packages(RMySQL)
install.packages(rmySQL)
install.packages("RMySQL")
library("httr")
oauth_endpoints("github")
myapp <- oauth_app("github", "e6b8aa6f4db307c76a11")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("github", "e6b8aa6f4db307c76a11")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
2
myapp <- oauth_app("github", "e6b8aa6f4db307c76a11","85f90d0db57675442fa369ca6d1846495cd017a3")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
